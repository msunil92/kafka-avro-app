/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.avro.kafkaapp.model;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Customer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Customer\",\"namespace\":\"com.avro.kafkaapp.model\",\"fields\":[{\"name\":\"first_name\",\"type\":\"string\",\"doc\":\"first name\"},{\"name\":\"last_name\",\"type\":\"string\",\"doc\":\"last name\"},{\"name\":\"age\",\"type\":\"int\",\"doc\":\"age\"}],\"version\":\"1\"}");
    public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
    /** first name */
    @Deprecated public String first_name;
    /** last name */
    @Deprecated public String last_name;
    /** age */
    @Deprecated public int age;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public Customer() {}

    /**
     * All-args constructor.
     */
    public Customer(String first_name, String last_name, Integer age) {
        this.first_name = first_name;
        this.last_name = last_name;
        this.age = age;
    }

    public org.apache.avro.Schema getSchema() { return SCHEMA$; }
    // Used by DatumWriter.  Applications should not call.
    public Object get(int field$) {
        switch (field$) {
            case 0: return first_name;
            case 1: return last_name;
            case 2: return age;
            default: throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }
    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value="unchecked")
    public void put(int field$, Object value$) {
        switch (field$) {
            case 0: first_name = (String)value$; break;
            case 1: last_name = (String)value$; break;
            case 2: age = (Integer)value$; break;
            default: throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'first_name' field.
     * first name   */
    public String getFirstName() {
        return first_name;
    }

    /**
     * Sets the value of the 'first_name' field.
     * first name   * @param value the value to set.
     */
    public void setFirstName(String value) {
        this.first_name = value;
    }

    /**
     * Gets the value of the 'last_name' field.
     * last name   */
    public String getLastName() {
        return last_name;
    }

    /**
     * Sets the value of the 'last_name' field.
     * last name   * @param value the value to set.
     */
    public void setLastName(String value) {
        this.last_name = value;
    }

    /**
     * Gets the value of the 'age' field.
     * age   */
    public Integer getAge() {
        return age;
    }

    /**
     * Sets the value of the 'age' field.
     * age   * @param value the value to set.
     */
    public void setAge(Integer value) {
        this.age = value;
    }

    /** Creates a new Customer RecordBuilder */
    public static com.avro.kafkaapp.model.Customer.Builder newBuilder() {
        return new com.avro.kafkaapp.model.Customer.Builder();
    }

    /** Creates a new Customer RecordBuilder by copying an existing Builder */
    public static com.avro.kafkaapp.model.Customer.Builder newBuilder(com.avro.kafkaapp.model.Customer.Builder other) {
        return new com.avro.kafkaapp.model.Customer.Builder(other);
    }

    /** Creates a new Customer RecordBuilder by copying an existing Customer instance */
    public static com.avro.kafkaapp.model.Customer.Builder newBuilder(com.avro.kafkaapp.model.Customer other) {
        return new com.avro.kafkaapp.model.Customer.Builder(other);
    }

    /**
     * RecordBuilder for Customer instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Customer>
            implements org.apache.avro.data.RecordBuilder<Customer> {

        private String first_name;
        private String last_name;
        private int age;

        /** Creates a new Builder */
        private Builder() {
            super(com.avro.kafkaapp.model.Customer.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(com.avro.kafkaapp.model.Customer.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.first_name)) {
                this.first_name = data().deepCopy(fields()[0].schema(), other.first_name);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.last_name)) {
                this.last_name = data().deepCopy(fields()[1].schema(), other.last_name);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.age)) {
                this.age = data().deepCopy(fields()[2].schema(), other.age);
                fieldSetFlags()[2] = true;
            }
        }

        /** Creates a Builder by copying an existing Customer instance */
        private Builder(com.avro.kafkaapp.model.Customer other) {
            super(com.avro.kafkaapp.model.Customer.SCHEMA$);
            if (isValidValue(fields()[0], other.first_name)) {
                this.first_name = data().deepCopy(fields()[0].schema(), other.first_name);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.last_name)) {
                this.last_name = data().deepCopy(fields()[1].schema(), other.last_name);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.age)) {
                this.age = data().deepCopy(fields()[2].schema(), other.age);
                fieldSetFlags()[2] = true;
            }
        }

        /** Gets the value of the 'first_name' field */
        public String getFirstName() {
            return first_name;
        }

        /** Sets the value of the 'first_name' field */
        public com.avro.kafkaapp.model.Customer.Builder setFirstName(String value) {
            validate(fields()[0], value);
            this.first_name = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'first_name' field has been set */
        public boolean hasFirstName() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'first_name' field */
        public com.avro.kafkaapp.model.Customer.Builder clearFirstName() {
            first_name = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'last_name' field */
        public String getLastName() {
            return last_name;
        }

        /** Sets the value of the 'last_name' field */
        public com.avro.kafkaapp.model.Customer.Builder setLastName(String value) {
            validate(fields()[1], value);
            this.last_name = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'last_name' field has been set */
        public boolean hasLastName() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'last_name' field */
        public com.avro.kafkaapp.model.Customer.Builder clearLastName() {
            last_name = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /** Gets the value of the 'age' field */
        public Integer getAge() {
            return age;
        }

        /** Sets the value of the 'age' field */
        public com.avro.kafkaapp.model.Customer.Builder setAge(int value) {
            validate(fields()[2], value);
            this.age = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /** Checks whether the 'age' field has been set */
        public boolean hasAge() {
            return fieldSetFlags()[2];
        }

        /** Clears the value of the 'age' field */
        public com.avro.kafkaapp.model.Customer.Builder clearAge() {
            fieldSetFlags()[2] = false;
            return this;
        }

        @Override
        public Customer build() {
            try {
                Customer record = new Customer();
                record.first_name = fieldSetFlags()[0] ? this.first_name : (String) defaultValue(fields()[0]);
                record.last_name = fieldSetFlags()[1] ? this.last_name : (String) defaultValue(fields()[1]);
                record.age = fieldSetFlags()[2] ? this.age : (Integer) defaultValue(fields()[2]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
